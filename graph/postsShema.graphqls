type Post {
  id: ID!
  name: String!
  author: String!
  content: String!
  commentsAllowed: Boolean!
  comments(limit: Int, offset: Int): [Comment!]
}

input CreatePostReq {
  name: String!
  content: String!
  author: String!
  commentsAllowed: Boolean!
}

type PostListEl {
  id: ID!
  name: String!
  author: String!
  content: String!
}

type Comment {
  id: ID!
  author: String!
  content: String!
  post: ID!
  replies(limit: Int, offset: Int): [Comment!]
  replyTo: ID
}

input CreateCommentReq {
  author: String!
  content: String!
  post: ID!
  replyTo: ID
}

type Query {
  GetAllPosts: [PostListEl!]!
  GetPostById(id: Int!): Post!
}

type Mutation {
  CreatePost(post: CreatePostReq!): PostListEl!
  CreateComment(input: CreateCommentReq!): Comment!
}

type Subscription {
  CommentSubscription(postId: Int!): Comment!
}
